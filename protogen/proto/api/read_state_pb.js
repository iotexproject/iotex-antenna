// source: proto/api/read_state.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.iotexapi.PaginationParam', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataMethod', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataMethod.Name', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.BucketsCount', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.CandidateByAddress', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.CandidateByName', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.Candidates', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.RequestCase', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.VoteBuckets', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes', null, global);
goog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.PaginationParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.PaginationParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.PaginationParam.displayName = 'proto.iotexapi.PaginationParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataMethod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataMethod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataMethod.displayName = 'proto.iotexapi.ReadStakingDataMethod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iotexapi.ReadStakingDataRequest.oneofGroups_);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.displayName = 'proto.iotexapi.ReadStakingDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest.VoteBuckets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.VoteBuckets.displayName = 'proto.iotexapi.ReadStakingDataRequest.VoteBuckets';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.displayName = 'proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.displayName = 'proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest.Candidates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest.Candidates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.Candidates.displayName = 'proto.iotexapi.ReadStakingDataRequest.Candidates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest.CandidateByName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.CandidateByName.displayName = 'proto.iotexapi.ReadStakingDataRequest.CandidateByName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.repeatedFields_, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.displayName = 'proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest.CandidateByAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.displayName = 'proto.iotexapi.ReadStakingDataRequest.CandidateByAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.displayName = 'proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotexapi.ReadStakingDataRequest.BucketsCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotexapi.ReadStakingDataRequest.BucketsCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotexapi.ReadStakingDataRequest.BucketsCount.displayName = 'proto.iotexapi.ReadStakingDataRequest.BucketsCount';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.PaginationParam.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.PaginationParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.PaginationParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.PaginationParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.PaginationParam}
 */
proto.iotexapi.PaginationParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.PaginationParam;
  return proto.iotexapi.PaginationParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.PaginationParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.PaginationParam}
 */
proto.iotexapi.PaginationParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.PaginationParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.PaginationParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.PaginationParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.PaginationParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 offset = 1;
 * @return {number}
 */
proto.iotexapi.PaginationParam.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotexapi.PaginationParam} returns this
 */
proto.iotexapi.PaginationParam.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.iotexapi.PaginationParam.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotexapi.PaginationParam} returns this
 */
proto.iotexapi.PaginationParam.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataMethod.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataMethod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataMethod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataMethod.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataMethod}
 */
proto.iotexapi.ReadStakingDataMethod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataMethod;
  return proto.iotexapi.ReadStakingDataMethod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataMethod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataMethod}
 */
proto.iotexapi.ReadStakingDataMethod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.iotexapi.ReadStakingDataMethod.Name} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataMethod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataMethod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataMethod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataMethod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.iotexapi.ReadStakingDataMethod.Name = {
  INVALID: 0,
  BUCKETS: 1,
  BUCKETS_BY_VOTER: 2,
  BUCKETS_BY_CANDIDATE: 3,
  CANDIDATES: 4,
  CANDIDATE_BY_NAME: 5,
  BUCKETS_BY_INDEXES: 6,
  CANDIDATE_BY_ADDRESS: 7,
  TOTAL_STAKING_AMOUNT: 8,
  BUCKETS_COUNT: 9
};

/**
 * optional Name method = 1;
 * @return {!proto.iotexapi.ReadStakingDataMethod.Name}
 */
proto.iotexapi.ReadStakingDataMethod.prototype.getMethod = function() {
  return /** @type {!proto.iotexapi.ReadStakingDataMethod.Name} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.iotexapi.ReadStakingDataMethod.Name} value
 * @return {!proto.iotexapi.ReadStakingDataMethod} returns this
 */
proto.iotexapi.ReadStakingDataMethod.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.iotexapi.ReadStakingDataRequest.oneofGroups_ = [[1,2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.iotexapi.ReadStakingDataRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  BUCKETS: 1,
  BUCKETSBYVOTER: 2,
  BUCKETSBYCANDIDATE: 3,
  CANDIDATES: 4,
  CANDIDATEBYNAME: 5,
  BUCKETSBYINDEXES: 6,
  CANDIDATEBYADDRESS: 7,
  TOTALSTAKINGAMOUNT: 8,
  BUCKETSCOUNT: 9
};

/**
 * @return {proto.iotexapi.ReadStakingDataRequest.RequestCase}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getRequestCase = function() {
  return /** @type {proto.iotexapi.ReadStakingDataRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    buckets: (f = msg.getBuckets()) && proto.iotexapi.ReadStakingDataRequest.VoteBuckets.toObject(includeInstance, f),
    bucketsbyvoter: (f = msg.getBucketsbyvoter()) && proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.toObject(includeInstance, f),
    bucketsbycandidate: (f = msg.getBucketsbycandidate()) && proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.toObject(includeInstance, f),
    candidates: (f = msg.getCandidates()) && proto.iotexapi.ReadStakingDataRequest.Candidates.toObject(includeInstance, f),
    candidatebyname: (f = msg.getCandidatebyname()) && proto.iotexapi.ReadStakingDataRequest.CandidateByName.toObject(includeInstance, f),
    bucketsbyindexes: (f = msg.getBucketsbyindexes()) && proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.toObject(includeInstance, f),
    candidatebyaddress: (f = msg.getCandidatebyaddress()) && proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.toObject(includeInstance, f),
    totalstakingamount: (f = msg.getTotalstakingamount()) && proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.toObject(includeInstance, f),
    bucketscount: (f = msg.getBucketscount()) && proto.iotexapi.ReadStakingDataRequest.BucketsCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest}
 */
proto.iotexapi.ReadStakingDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest;
  return proto.iotexapi.ReadStakingDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest}
 */
proto.iotexapi.ReadStakingDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotexapi.ReadStakingDataRequest.VoteBuckets;
      reader.readMessage(value,proto.iotexapi.ReadStakingDataRequest.VoteBuckets.deserializeBinaryFromReader);
      msg.setBuckets(value);
      break;
    case 2:
      var value = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter;
      reader.readMessage(value,proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.deserializeBinaryFromReader);
      msg.setBucketsbyvoter(value);
      break;
    case 3:
      var value = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate;
      reader.readMessage(value,proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.deserializeBinaryFromReader);
      msg.setBucketsbycandidate(value);
      break;
    case 4:
      var value = new proto.iotexapi.ReadStakingDataRequest.Candidates;
      reader.readMessage(value,proto.iotexapi.ReadStakingDataRequest.Candidates.deserializeBinaryFromReader);
      msg.setCandidates(value);
      break;
    case 5:
      var value = new proto.iotexapi.ReadStakingDataRequest.CandidateByName;
      reader.readMessage(value,proto.iotexapi.ReadStakingDataRequest.CandidateByName.deserializeBinaryFromReader);
      msg.setCandidatebyname(value);
      break;
    case 6:
      var value = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes;
      reader.readMessage(value,proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.deserializeBinaryFromReader);
      msg.setBucketsbyindexes(value);
      break;
    case 7:
      var value = new proto.iotexapi.ReadStakingDataRequest.CandidateByAddress;
      reader.readMessage(value,proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.deserializeBinaryFromReader);
      msg.setCandidatebyaddress(value);
      break;
    case 8:
      var value = new proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount;
      reader.readMessage(value,proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.deserializeBinaryFromReader);
      msg.setTotalstakingamount(value);
      break;
    case 9:
      var value = new proto.iotexapi.ReadStakingDataRequest.BucketsCount;
      reader.readMessage(value,proto.iotexapi.ReadStakingDataRequest.BucketsCount.deserializeBinaryFromReader);
      msg.setBucketscount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuckets();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotexapi.ReadStakingDataRequest.VoteBuckets.serializeBinaryToWriter
    );
  }
  f = message.getBucketsbyvoter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.serializeBinaryToWriter
    );
  }
  f = message.getBucketsbycandidate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.serializeBinaryToWriter
    );
  }
  f = message.getCandidates();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.iotexapi.ReadStakingDataRequest.Candidates.serializeBinaryToWriter
    );
  }
  f = message.getCandidatebyname();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.iotexapi.ReadStakingDataRequest.CandidateByName.serializeBinaryToWriter
    );
  }
  f = message.getBucketsbyindexes();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.serializeBinaryToWriter
    );
  }
  f = message.getCandidatebyaddress();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.serializeBinaryToWriter
    );
  }
  f = message.getTotalstakingamount();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.serializeBinaryToWriter
    );
  }
  f = message.getBucketscount();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.iotexapi.ReadStakingDataRequest.BucketsCount.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.VoteBuckets.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.iotexapi.PaginationParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest.VoteBuckets;
  return proto.iotexapi.ReadStakingDataRequest.VoteBuckets.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotexapi.PaginationParam;
      reader.readMessage(value,proto.iotexapi.PaginationParam.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.VoteBuckets.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotexapi.PaginationParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional PaginationParam pagination = 1;
 * @return {?proto.iotexapi.PaginationParam}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.getPagination = function() {
  return /** @type{?proto.iotexapi.PaginationParam} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.PaginationParam, 1));
};


/**
 * @param {?proto.iotexapi.PaginationParam|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} returns this
*/
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} returns this
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.toObject = function(includeInstance, msg) {
  var f, obj = {
    voteraddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.iotexapi.PaginationParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter;
  return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVoteraddress(value);
      break;
    case 2:
      var value = new proto.iotexapi.PaginationParam;
      reader.readMessage(value,proto.iotexapi.PaginationParam.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoteraddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotexapi.PaginationParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional string voterAddress = 1;
 * @return {string}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.getVoteraddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} returns this
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.setVoteraddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PaginationParam pagination = 2;
 * @return {?proto.iotexapi.PaginationParam}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.getPagination = function() {
  return /** @type{?proto.iotexapi.PaginationParam} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.PaginationParam, 2));
};


/**
 * @param {?proto.iotexapi.PaginationParam|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} returns this
*/
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} returns this
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.toObject = function(includeInstance, msg) {
  var f, obj = {
    candname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.iotexapi.PaginationParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate;
  return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandname(value);
      break;
    case 2:
      var value = new proto.iotexapi.PaginationParam;
      reader.readMessage(value,proto.iotexapi.PaginationParam.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotexapi.PaginationParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional string candName = 1;
 * @return {string}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.getCandname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} returns this
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.setCandname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PaginationParam pagination = 2;
 * @return {?proto.iotexapi.PaginationParam}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.getPagination = function() {
  return /** @type{?proto.iotexapi.PaginationParam} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.PaginationParam, 2));
};


/**
 * @param {?proto.iotexapi.PaginationParam|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} returns this
*/
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} returns this
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.Candidates.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.Candidates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest.Candidates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.Candidates.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.iotexapi.PaginationParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest.Candidates}
 */
proto.iotexapi.ReadStakingDataRequest.Candidates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest.Candidates;
  return proto.iotexapi.ReadStakingDataRequest.Candidates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest.Candidates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest.Candidates}
 */
proto.iotexapi.ReadStakingDataRequest.Candidates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotexapi.PaginationParam;
      reader.readMessage(value,proto.iotexapi.PaginationParam.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.Candidates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.Candidates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest.Candidates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.Candidates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotexapi.PaginationParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional PaginationParam pagination = 1;
 * @return {?proto.iotexapi.PaginationParam}
 */
proto.iotexapi.ReadStakingDataRequest.Candidates.prototype.getPagination = function() {
  return /** @type{?proto.iotexapi.PaginationParam} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.PaginationParam, 1));
};


/**
 * @param {?proto.iotexapi.PaginationParam|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest.Candidates} returns this
*/
proto.iotexapi.ReadStakingDataRequest.Candidates.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest.Candidates} returns this
 */
proto.iotexapi.ReadStakingDataRequest.Candidates.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.Candidates.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByName.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.CandidateByName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByName.toObject = function(includeInstance, msg) {
  var f, obj = {
    candname: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByName}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest.CandidateByName;
  return proto.iotexapi.ReadStakingDataRequest.CandidateByName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByName}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.CandidateByName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string candName = 1;
 * @return {string}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByName.prototype.getCandname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByName} returns this
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByName.prototype.setCandname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.toObject = function(includeInstance, msg) {
  var f, obj = {
    indexList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes;
  return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addIndex(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndexList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 index = 1;
 * @return {!Array<number>}
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.getIndexList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} returns this
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.setIndexList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} returns this
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.addIndex = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} returns this
 */
proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.clearIndexList = function() {
  return this.setIndexList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    owneraddr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest.CandidateByAddress;
  return proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwneraddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwneraddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ownerAddr = 1;
 * @return {string}
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.prototype.getOwneraddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} returns this
 */
proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.prototype.setOwneraddr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount}
 */
proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount;
  return proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount}
 */
proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotexapi.ReadStakingDataRequest.BucketsCount.prototype.toObject = function(opt_includeInstance) {
  return proto.iotexapi.ReadStakingDataRequest.BucketsCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotexapi.ReadStakingDataRequest.BucketsCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.BucketsCount.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotexapi.ReadStakingDataRequest.BucketsCount}
 */
proto.iotexapi.ReadStakingDataRequest.BucketsCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotexapi.ReadStakingDataRequest.BucketsCount;
  return proto.iotexapi.ReadStakingDataRequest.BucketsCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotexapi.ReadStakingDataRequest.BucketsCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotexapi.ReadStakingDataRequest.BucketsCount}
 */
proto.iotexapi.ReadStakingDataRequest.BucketsCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotexapi.ReadStakingDataRequest.BucketsCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotexapi.ReadStakingDataRequest.BucketsCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotexapi.ReadStakingDataRequest.BucketsCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotexapi.ReadStakingDataRequest.BucketsCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional VoteBuckets buckets = 1;
 * @return {?proto.iotexapi.ReadStakingDataRequest.VoteBuckets}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getBuckets = function() {
  return /** @type{?proto.iotexapi.ReadStakingDataRequest.VoteBuckets} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.VoteBuckets, 1));
};


/**
 * @param {?proto.iotexapi.ReadStakingDataRequest.VoteBuckets|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
*/
proto.iotexapi.ReadStakingDataRequest.prototype.setBuckets = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
 */
proto.iotexapi.ReadStakingDataRequest.prototype.clearBuckets = function() {
  return this.setBuckets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.hasBuckets = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VoteBucketsByVoter bucketsByVoter = 2;
 * @return {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getBucketsbyvoter = function() {
  return /** @type{?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter, 2));
};


/**
 * @param {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
*/
proto.iotexapi.ReadStakingDataRequest.prototype.setBucketsbyvoter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
 */
proto.iotexapi.ReadStakingDataRequest.prototype.clearBucketsbyvoter = function() {
  return this.setBucketsbyvoter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.hasBucketsbyvoter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VoteBucketsByCandidate bucketsByCandidate = 3;
 * @return {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getBucketsbycandidate = function() {
  return /** @type{?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate, 3));
};


/**
 * @param {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
*/
proto.iotexapi.ReadStakingDataRequest.prototype.setBucketsbycandidate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
 */
proto.iotexapi.ReadStakingDataRequest.prototype.clearBucketsbycandidate = function() {
  return this.setBucketsbycandidate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.hasBucketsbycandidate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Candidates candidates = 4;
 * @return {?proto.iotexapi.ReadStakingDataRequest.Candidates}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getCandidates = function() {
  return /** @type{?proto.iotexapi.ReadStakingDataRequest.Candidates} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.Candidates, 4));
};


/**
 * @param {?proto.iotexapi.ReadStakingDataRequest.Candidates|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
*/
proto.iotexapi.ReadStakingDataRequest.prototype.setCandidates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
 */
proto.iotexapi.ReadStakingDataRequest.prototype.clearCandidates = function() {
  return this.setCandidates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.hasCandidates = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CandidateByName candidateByName = 5;
 * @return {?proto.iotexapi.ReadStakingDataRequest.CandidateByName}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getCandidatebyname = function() {
  return /** @type{?proto.iotexapi.ReadStakingDataRequest.CandidateByName} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.CandidateByName, 5));
};


/**
 * @param {?proto.iotexapi.ReadStakingDataRequest.CandidateByName|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
*/
proto.iotexapi.ReadStakingDataRequest.prototype.setCandidatebyname = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
 */
proto.iotexapi.ReadStakingDataRequest.prototype.clearCandidatebyname = function() {
  return this.setCandidatebyname(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.hasCandidatebyname = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional VoteBucketsByIndexes bucketsByIndexes = 6;
 * @return {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getBucketsbyindexes = function() {
  return /** @type{?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes, 6));
};


/**
 * @param {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
*/
proto.iotexapi.ReadStakingDataRequest.prototype.setBucketsbyindexes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
 */
proto.iotexapi.ReadStakingDataRequest.prototype.clearBucketsbyindexes = function() {
  return this.setBucketsbyindexes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.hasBucketsbyindexes = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional CandidateByAddress candidateByAddress = 7;
 * @return {?proto.iotexapi.ReadStakingDataRequest.CandidateByAddress}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getCandidatebyaddress = function() {
  return /** @type{?proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.CandidateByAddress, 7));
};


/**
 * @param {?proto.iotexapi.ReadStakingDataRequest.CandidateByAddress|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
*/
proto.iotexapi.ReadStakingDataRequest.prototype.setCandidatebyaddress = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
 */
proto.iotexapi.ReadStakingDataRequest.prototype.clearCandidatebyaddress = function() {
  return this.setCandidatebyaddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.hasCandidatebyaddress = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TotalStakingAmount totalStakingAmount = 8;
 * @return {?proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getTotalstakingamount = function() {
  return /** @type{?proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount, 8));
};


/**
 * @param {?proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
*/
proto.iotexapi.ReadStakingDataRequest.prototype.setTotalstakingamount = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
 */
proto.iotexapi.ReadStakingDataRequest.prototype.clearTotalstakingamount = function() {
  return this.setTotalstakingamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.hasTotalstakingamount = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional BucketsCount bucketsCount = 9;
 * @return {?proto.iotexapi.ReadStakingDataRequest.BucketsCount}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.getBucketscount = function() {
  return /** @type{?proto.iotexapi.ReadStakingDataRequest.BucketsCount} */ (
    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.BucketsCount, 9));
};


/**
 * @param {?proto.iotexapi.ReadStakingDataRequest.BucketsCount|undefined} value
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
*/
proto.iotexapi.ReadStakingDataRequest.prototype.setBucketscount = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotexapi.ReadStakingDataRequest} returns this
 */
proto.iotexapi.ReadStakingDataRequest.prototype.clearBucketscount = function() {
  return this.setBucketscount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotexapi.ReadStakingDataRequest.prototype.hasBucketscount = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.iotexapi);

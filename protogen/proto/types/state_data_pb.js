// source: proto/types/state_data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.iotextypes.BucketsCount', null, global);
goog.exportSymbol('proto.iotextypes.CandidateListV2', null, global);
goog.exportSymbol('proto.iotextypes.CandidateV2', null, global);
goog.exportSymbol('proto.iotextypes.ContractStakingBucketType', null, global);
goog.exportSymbol('proto.iotextypes.ContractStakingBucketTypeList', null, global);
goog.exportSymbol('proto.iotextypes.ProbationCandidateList', null, global);
goog.exportSymbol('proto.iotextypes.ProbationCandidateList.Info', null, global);
goog.exportSymbol('proto.iotextypes.VoteBucket', null, global);
goog.exportSymbol('proto.iotextypes.VoteBucketList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.ProbationCandidateList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.ProbationCandidateList.repeatedFields_, null);
};
goog.inherits(proto.iotextypes.ProbationCandidateList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotextypes.ProbationCandidateList.displayName = 'proto.iotextypes.ProbationCandidateList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.ProbationCandidateList.Info = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotextypes.ProbationCandidateList.Info, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotextypes.ProbationCandidateList.Info.displayName = 'proto.iotextypes.ProbationCandidateList.Info';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.VoteBucket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotextypes.VoteBucket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotextypes.VoteBucket.displayName = 'proto.iotextypes.VoteBucket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.VoteBucketList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.VoteBucketList.repeatedFields_, null);
};
goog.inherits(proto.iotextypes.VoteBucketList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotextypes.VoteBucketList.displayName = 'proto.iotextypes.VoteBucketList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.CandidateV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotextypes.CandidateV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotextypes.CandidateV2.displayName = 'proto.iotextypes.CandidateV2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.CandidateListV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.CandidateListV2.repeatedFields_, null);
};
goog.inherits(proto.iotextypes.CandidateListV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotextypes.CandidateListV2.displayName = 'proto.iotextypes.CandidateListV2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.BucketsCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotextypes.BucketsCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotextypes.BucketsCount.displayName = 'proto.iotextypes.BucketsCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.ContractStakingBucketType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotextypes.ContractStakingBucketType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotextypes.ContractStakingBucketType.displayName = 'proto.iotextypes.ContractStakingBucketType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.ContractStakingBucketTypeList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.ContractStakingBucketTypeList.repeatedFields_, null);
};
goog.inherits(proto.iotextypes.ContractStakingBucketTypeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotextypes.ContractStakingBucketTypeList.displayName = 'proto.iotextypes.ContractStakingBucketTypeList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotextypes.ProbationCandidateList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.ProbationCandidateList.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.ProbationCandidateList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.ProbationCandidateList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.ProbationCandidateList.toObject = function(includeInstance, msg) {
  var f, obj = {
    probationlistList: jspb.Message.toObjectList(msg.getProbationlistList(),
    proto.iotextypes.ProbationCandidateList.Info.toObject, includeInstance),
    intensityrate: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.ProbationCandidateList}
 */
proto.iotextypes.ProbationCandidateList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.ProbationCandidateList;
  return proto.iotextypes.ProbationCandidateList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.ProbationCandidateList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.ProbationCandidateList}
 */
proto.iotextypes.ProbationCandidateList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotextypes.ProbationCandidateList.Info;
      reader.readMessage(value,proto.iotextypes.ProbationCandidateList.Info.deserializeBinaryFromReader);
      msg.addProbationlist(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIntensityrate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.ProbationCandidateList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.ProbationCandidateList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.ProbationCandidateList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.ProbationCandidateList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProbationlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.iotextypes.ProbationCandidateList.Info.serializeBinaryToWriter
    );
  }
  f = message.getIntensityrate();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.ProbationCandidateList.Info.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.ProbationCandidateList.Info.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.ProbationCandidateList.Info} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.ProbationCandidateList.Info.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.ProbationCandidateList.Info}
 */
proto.iotextypes.ProbationCandidateList.Info.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.ProbationCandidateList.Info;
  return proto.iotextypes.ProbationCandidateList.Info.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.ProbationCandidateList.Info} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.ProbationCandidateList.Info}
 */
proto.iotextypes.ProbationCandidateList.Info.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.ProbationCandidateList.Info.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.ProbationCandidateList.Info.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.ProbationCandidateList.Info} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.ProbationCandidateList.Info.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.iotextypes.ProbationCandidateList.Info.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.ProbationCandidateList.Info} returns this
 */
proto.iotextypes.ProbationCandidateList.Info.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 count = 2;
 * @return {number}
 */
proto.iotextypes.ProbationCandidateList.Info.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.ProbationCandidateList.Info} returns this
 */
proto.iotextypes.ProbationCandidateList.Info.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Info probationList = 1;
 * @return {!Array<!proto.iotextypes.ProbationCandidateList.Info>}
 */
proto.iotextypes.ProbationCandidateList.prototype.getProbationlistList = function() {
  return /** @type{!Array<!proto.iotextypes.ProbationCandidateList.Info>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.ProbationCandidateList.Info, 1));
};


/**
 * @param {!Array<!proto.iotextypes.ProbationCandidateList.Info>} value
 * @return {!proto.iotextypes.ProbationCandidateList} returns this
*/
proto.iotextypes.ProbationCandidateList.prototype.setProbationlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.iotextypes.ProbationCandidateList.Info=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotextypes.ProbationCandidateList.Info}
 */
proto.iotextypes.ProbationCandidateList.prototype.addProbationlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.ProbationCandidateList.Info, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotextypes.ProbationCandidateList} returns this
 */
proto.iotextypes.ProbationCandidateList.prototype.clearProbationlistList = function() {
  return this.setProbationlistList([]);
};


/**
 * optional uint32 intensityRate = 2;
 * @return {number}
 */
proto.iotextypes.ProbationCandidateList.prototype.getIntensityrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.ProbationCandidateList} returns this
 */
proto.iotextypes.ProbationCandidateList.prototype.setIntensityrate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.VoteBucket.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.VoteBucket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.VoteBucket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.VoteBucket.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    candidateaddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stakedamount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    stakedduration: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createtime: (f = msg.getCreatetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    stakestarttime: (f = msg.getStakestarttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    unstakestarttime: (f = msg.getUnstakestarttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    autostake: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    owner: jspb.Message.getFieldWithDefault(msg, 9, ""),
    contractaddress: jspb.Message.getFieldWithDefault(msg, 10, ""),
    stakeddurationblocknumber: jspb.Message.getFieldWithDefault(msg, 11, 0),
    createblockheight: jspb.Message.getFieldWithDefault(msg, 12, 0),
    stakestartblockheight: jspb.Message.getFieldWithDefault(msg, 13, 0),
    unstakestartblockheight: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.VoteBucket}
 */
proto.iotextypes.VoteBucket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.VoteBucket;
  return proto.iotextypes.VoteBucket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.VoteBucket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.VoteBucket}
 */
proto.iotextypes.VoteBucket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandidateaddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStakedamount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStakedduration(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatetime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStakestarttime(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUnstakestarttime(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutostake(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractaddress(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStakeddurationblocknumber(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreateblockheight(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStakestartblockheight(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnstakestartblockheight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.VoteBucket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.VoteBucket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.VoteBucket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.VoteBucket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCandidateaddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStakedamount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStakedduration();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getCreatetime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStakestarttime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUnstakestarttime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAutostake();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getContractaddress();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getStakeddurationblocknumber();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getCreateblockheight();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getStakestartblockheight();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getUnstakestartblockheight();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
};


/**
 * optional uint64 index = 1;
 * @return {number}
 */
proto.iotextypes.VoteBucket.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string candidateAddress = 2;
 * @return {string}
 */
proto.iotextypes.VoteBucket.prototype.getCandidateaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setCandidateaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string stakedAmount = 3;
 * @return {string}
 */
proto.iotextypes.VoteBucket.prototype.getStakedamount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setStakedamount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 stakedDuration = 4;
 * @return {number}
 */
proto.iotextypes.VoteBucket.prototype.getStakedduration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setStakedduration = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp createTime = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotextypes.VoteBucket.prototype.getCreatetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotextypes.VoteBucket} returns this
*/
proto.iotextypes.VoteBucket.prototype.setCreatetime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.clearCreatetime = function() {
  return this.setCreatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotextypes.VoteBucket.prototype.hasCreatetime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp stakeStartTime = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotextypes.VoteBucket.prototype.getStakestarttime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotextypes.VoteBucket} returns this
*/
proto.iotextypes.VoteBucket.prototype.setStakestarttime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.clearStakestarttime = function() {
  return this.setStakestarttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotextypes.VoteBucket.prototype.hasStakestarttime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp unstakeStartTime = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotextypes.VoteBucket.prototype.getUnstakestarttime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotextypes.VoteBucket} returns this
*/
proto.iotextypes.VoteBucket.prototype.setUnstakestarttime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.clearUnstakestarttime = function() {
  return this.setUnstakestarttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotextypes.VoteBucket.prototype.hasUnstakestarttime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool autoStake = 8;
 * @return {boolean}
 */
proto.iotextypes.VoteBucket.prototype.getAutostake = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setAutostake = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string owner = 9;
 * @return {string}
 */
proto.iotextypes.VoteBucket.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string contractAddress = 10;
 * @return {string}
 */
proto.iotextypes.VoteBucket.prototype.getContractaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setContractaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional uint64 stakedDurationBlockNumber = 11;
 * @return {number}
 */
proto.iotextypes.VoteBucket.prototype.getStakeddurationblocknumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setStakeddurationblocknumber = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 createBlockHeight = 12;
 * @return {number}
 */
proto.iotextypes.VoteBucket.prototype.getCreateblockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setCreateblockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 stakeStartBlockHeight = 13;
 * @return {number}
 */
proto.iotextypes.VoteBucket.prototype.getStakestartblockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setStakestartblockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint64 unstakeStartBlockHeight = 14;
 * @return {number}
 */
proto.iotextypes.VoteBucket.prototype.getUnstakestartblockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.VoteBucket} returns this
 */
proto.iotextypes.VoteBucket.prototype.setUnstakestartblockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotextypes.VoteBucketList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.VoteBucketList.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.VoteBucketList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.VoteBucketList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.VoteBucketList.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketsList: jspb.Message.toObjectList(msg.getBucketsList(),
    proto.iotextypes.VoteBucket.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.VoteBucketList}
 */
proto.iotextypes.VoteBucketList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.VoteBucketList;
  return proto.iotextypes.VoteBucketList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.VoteBucketList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.VoteBucketList}
 */
proto.iotextypes.VoteBucketList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotextypes.VoteBucket;
      reader.readMessage(value,proto.iotextypes.VoteBucket.deserializeBinaryFromReader);
      msg.addBuckets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.VoteBucketList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.VoteBucketList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.VoteBucketList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.VoteBucketList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.iotextypes.VoteBucket.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VoteBucket buckets = 1;
 * @return {!Array<!proto.iotextypes.VoteBucket>}
 */
proto.iotextypes.VoteBucketList.prototype.getBucketsList = function() {
  return /** @type{!Array<!proto.iotextypes.VoteBucket>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.VoteBucket, 1));
};


/**
 * @param {!Array<!proto.iotextypes.VoteBucket>} value
 * @return {!proto.iotextypes.VoteBucketList} returns this
*/
proto.iotextypes.VoteBucketList.prototype.setBucketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.iotextypes.VoteBucket=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotextypes.VoteBucket}
 */
proto.iotextypes.VoteBucketList.prototype.addBuckets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.VoteBucket, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotextypes.VoteBucketList} returns this
 */
proto.iotextypes.VoteBucketList.prototype.clearBucketsList = function() {
  return this.setBucketsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.CandidateV2.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.CandidateV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.CandidateV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.CandidateV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    owneraddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operatoraddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rewardaddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    totalweightedvotes: jspb.Message.getFieldWithDefault(msg, 5, ""),
    selfstakebucketidx: jspb.Message.getFieldWithDefault(msg, 6, 0),
    selfstakingtokens: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.CandidateV2}
 */
proto.iotextypes.CandidateV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.CandidateV2;
  return proto.iotextypes.CandidateV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.CandidateV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.CandidateV2}
 */
proto.iotextypes.CandidateV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwneraddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatoraddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardaddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalweightedvotes(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSelfstakebucketidx(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelfstakingtokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.CandidateV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.CandidateV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.CandidateV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.CandidateV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwneraddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperatoraddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRewardaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTotalweightedvotes();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSelfstakebucketidx();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getSelfstakingtokens();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string ownerAddress = 1;
 * @return {string}
 */
proto.iotextypes.CandidateV2.prototype.getOwneraddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.CandidateV2} returns this
 */
proto.iotextypes.CandidateV2.prototype.setOwneraddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string operatorAddress = 2;
 * @return {string}
 */
proto.iotextypes.CandidateV2.prototype.getOperatoraddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.CandidateV2} returns this
 */
proto.iotextypes.CandidateV2.prototype.setOperatoraddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rewardAddress = 3;
 * @return {string}
 */
proto.iotextypes.CandidateV2.prototype.getRewardaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.CandidateV2} returns this
 */
proto.iotextypes.CandidateV2.prototype.setRewardaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.iotextypes.CandidateV2.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.CandidateV2} returns this
 */
proto.iotextypes.CandidateV2.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string totalWeightedVotes = 5;
 * @return {string}
 */
proto.iotextypes.CandidateV2.prototype.getTotalweightedvotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.CandidateV2} returns this
 */
proto.iotextypes.CandidateV2.prototype.setTotalweightedvotes = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 selfStakeBucketIdx = 6;
 * @return {number}
 */
proto.iotextypes.CandidateV2.prototype.getSelfstakebucketidx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.CandidateV2} returns this
 */
proto.iotextypes.CandidateV2.prototype.setSelfstakebucketidx = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string selfStakingTokens = 7;
 * @return {string}
 */
proto.iotextypes.CandidateV2.prototype.getSelfstakingtokens = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.CandidateV2} returns this
 */
proto.iotextypes.CandidateV2.prototype.setSelfstakingtokens = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotextypes.CandidateListV2.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.CandidateListV2.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.CandidateListV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.CandidateListV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.CandidateListV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidatesList: jspb.Message.toObjectList(msg.getCandidatesList(),
    proto.iotextypes.CandidateV2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.CandidateListV2}
 */
proto.iotextypes.CandidateListV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.CandidateListV2;
  return proto.iotextypes.CandidateListV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.CandidateListV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.CandidateListV2}
 */
proto.iotextypes.CandidateListV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotextypes.CandidateV2;
      reader.readMessage(value,proto.iotextypes.CandidateV2.deserializeBinaryFromReader);
      msg.addCandidates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.CandidateListV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.CandidateListV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.CandidateListV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.CandidateListV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.iotextypes.CandidateV2.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CandidateV2 candidates = 1;
 * @return {!Array<!proto.iotextypes.CandidateV2>}
 */
proto.iotextypes.CandidateListV2.prototype.getCandidatesList = function() {
  return /** @type{!Array<!proto.iotextypes.CandidateV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.CandidateV2, 1));
};


/**
 * @param {!Array<!proto.iotextypes.CandidateV2>} value
 * @return {!proto.iotextypes.CandidateListV2} returns this
*/
proto.iotextypes.CandidateListV2.prototype.setCandidatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.iotextypes.CandidateV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotextypes.CandidateV2}
 */
proto.iotextypes.CandidateListV2.prototype.addCandidates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.CandidateV2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotextypes.CandidateListV2} returns this
 */
proto.iotextypes.CandidateListV2.prototype.clearCandidatesList = function() {
  return this.setCandidatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.BucketsCount.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.BucketsCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.BucketsCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.BucketsCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    active: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.BucketsCount}
 */
proto.iotextypes.BucketsCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.BucketsCount;
  return proto.iotextypes.BucketsCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.BucketsCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.BucketsCount}
 */
proto.iotextypes.BucketsCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.BucketsCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.BucketsCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.BucketsCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.BucketsCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getActive();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 total = 1;
 * @return {number}
 */
proto.iotextypes.BucketsCount.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.BucketsCount} returns this
 */
proto.iotextypes.BucketsCount.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 active = 2;
 * @return {number}
 */
proto.iotextypes.BucketsCount.prototype.getActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.BucketsCount} returns this
 */
proto.iotextypes.BucketsCount.prototype.setActive = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.ContractStakingBucketType.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.ContractStakingBucketType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.ContractStakingBucketType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.ContractStakingBucketType.toObject = function(includeInstance, msg) {
  var f, obj = {
    stakedamount: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stakedduration: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.ContractStakingBucketType}
 */
proto.iotextypes.ContractStakingBucketType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.ContractStakingBucketType;
  return proto.iotextypes.ContractStakingBucketType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.ContractStakingBucketType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.ContractStakingBucketType}
 */
proto.iotextypes.ContractStakingBucketType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStakedamount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStakedduration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.ContractStakingBucketType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.ContractStakingBucketType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.ContractStakingBucketType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.ContractStakingBucketType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStakedamount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStakedduration();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string stakedAmount = 1;
 * @return {string}
 */
proto.iotextypes.ContractStakingBucketType.prototype.getStakedamount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotextypes.ContractStakingBucketType} returns this
 */
proto.iotextypes.ContractStakingBucketType.prototype.setStakedamount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 stakedDuration = 2;
 * @return {number}
 */
proto.iotextypes.ContractStakingBucketType.prototype.getStakedduration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotextypes.ContractStakingBucketType} returns this
 */
proto.iotextypes.ContractStakingBucketType.prototype.setStakedduration = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotextypes.ContractStakingBucketTypeList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.ContractStakingBucketTypeList.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.ContractStakingBucketTypeList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.ContractStakingBucketTypeList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.ContractStakingBucketTypeList.toObject = function(includeInstance, msg) {
  var f, obj = {
    buckettypesList: jspb.Message.toObjectList(msg.getBuckettypesList(),
    proto.iotextypes.ContractStakingBucketType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.ContractStakingBucketTypeList}
 */
proto.iotextypes.ContractStakingBucketTypeList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.ContractStakingBucketTypeList;
  return proto.iotextypes.ContractStakingBucketTypeList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.ContractStakingBucketTypeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.ContractStakingBucketTypeList}
 */
proto.iotextypes.ContractStakingBucketTypeList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotextypes.ContractStakingBucketType;
      reader.readMessage(value,proto.iotextypes.ContractStakingBucketType.deserializeBinaryFromReader);
      msg.addBuckettypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.ContractStakingBucketTypeList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.ContractStakingBucketTypeList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.ContractStakingBucketTypeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.ContractStakingBucketTypeList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuckettypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.iotextypes.ContractStakingBucketType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractStakingBucketType bucketTypes = 1;
 * @return {!Array<!proto.iotextypes.ContractStakingBucketType>}
 */
proto.iotextypes.ContractStakingBucketTypeList.prototype.getBuckettypesList = function() {
  return /** @type{!Array<!proto.iotextypes.ContractStakingBucketType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.ContractStakingBucketType, 1));
};


/**
 * @param {!Array<!proto.iotextypes.ContractStakingBucketType>} value
 * @return {!proto.iotextypes.ContractStakingBucketTypeList} returns this
*/
proto.iotextypes.ContractStakingBucketTypeList.prototype.setBuckettypesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.iotextypes.ContractStakingBucketType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotextypes.ContractStakingBucketType}
 */
proto.iotextypes.ContractStakingBucketTypeList.prototype.addBuckettypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.ContractStakingBucketType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotextypes.ContractStakingBucketTypeList} returns this
 */
proto.iotextypes.ContractStakingBucketTypeList.prototype.clearBuckettypesList = function() {
  return this.setBuckettypesList([]);
};


goog.object.extend(exports, proto.iotextypes);

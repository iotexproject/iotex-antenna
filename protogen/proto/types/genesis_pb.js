/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.iotextypes.Genesis', null, global);
goog.exportSymbol('proto.iotextypes.GenesisAccount', null, global);
goog.exportSymbol('proto.iotextypes.GenesisBlockchain', null, global);
goog.exportSymbol('proto.iotextypes.GenesisDelegate', null, global);
goog.exportSymbol('proto.iotextypes.GenesisPoll', null, global);
goog.exportSymbol('proto.iotextypes.GenesisRewarding', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.Genesis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotextypes.Genesis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iotextypes.Genesis.displayName = 'proto.iotextypes.Genesis';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.Genesis.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.Genesis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.Genesis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.Genesis.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockchain: (f = msg.getBlockchain()) && proto.iotextypes.GenesisBlockchain.toObject(includeInstance, f),
    account: (f = msg.getAccount()) && proto.iotextypes.GenesisAccount.toObject(includeInstance, f),
    poll: (f = msg.getPoll()) && proto.iotextypes.GenesisPoll.toObject(includeInstance, f),
    rewarding: (f = msg.getRewarding()) && proto.iotextypes.GenesisRewarding.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.Genesis}
 */
proto.iotextypes.Genesis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.Genesis;
  return proto.iotextypes.Genesis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.Genesis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.Genesis}
 */
proto.iotextypes.Genesis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotextypes.GenesisBlockchain;
      reader.readMessage(value,proto.iotextypes.GenesisBlockchain.deserializeBinaryFromReader);
      msg.setBlockchain(value);
      break;
    case 2:
      var value = new proto.iotextypes.GenesisAccount;
      reader.readMessage(value,proto.iotextypes.GenesisAccount.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 3:
      var value = new proto.iotextypes.GenesisPoll;
      reader.readMessage(value,proto.iotextypes.GenesisPoll.deserializeBinaryFromReader);
      msg.setPoll(value);
      break;
    case 4:
      var value = new proto.iotextypes.GenesisRewarding;
      reader.readMessage(value,proto.iotextypes.GenesisRewarding.deserializeBinaryFromReader);
      msg.setRewarding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.Genesis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.Genesis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.Genesis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.Genesis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockchain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotextypes.GenesisBlockchain.serializeBinaryToWriter
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotextypes.GenesisAccount.serializeBinaryToWriter
    );
  }
  f = message.getPoll();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotextypes.GenesisPoll.serializeBinaryToWriter
    );
  }
  f = message.getRewarding();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.iotextypes.GenesisRewarding.serializeBinaryToWriter
    );
  }
};


/**
 * optional GenesisBlockchain blockchain = 1;
 * @return {?proto.iotextypes.GenesisBlockchain}
 */
proto.iotextypes.Genesis.prototype.getBlockchain = function() {
  return /** @type{?proto.iotextypes.GenesisBlockchain} */ (
    jspb.Message.getWrapperField(this, proto.iotextypes.GenesisBlockchain, 1));
};


/** @param {?proto.iotextypes.GenesisBlockchain|undefined} value */
proto.iotextypes.Genesis.prototype.setBlockchain = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.iotextypes.Genesis.prototype.clearBlockchain = function() {
  this.setBlockchain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.iotextypes.Genesis.prototype.hasBlockchain = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GenesisAccount account = 2;
 * @return {?proto.iotextypes.GenesisAccount}
 */
proto.iotextypes.Genesis.prototype.getAccount = function() {
  return /** @type{?proto.iotextypes.GenesisAccount} */ (
    jspb.Message.getWrapperField(this, proto.iotextypes.GenesisAccount, 2));
};


/** @param {?proto.iotextypes.GenesisAccount|undefined} value */
proto.iotextypes.Genesis.prototype.setAccount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.iotextypes.Genesis.prototype.clearAccount = function() {
  this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.iotextypes.Genesis.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GenesisPoll poll = 3;
 * @return {?proto.iotextypes.GenesisPoll}
 */
proto.iotextypes.Genesis.prototype.getPoll = function() {
  return /** @type{?proto.iotextypes.GenesisPoll} */ (
    jspb.Message.getWrapperField(this, proto.iotextypes.GenesisPoll, 3));
};


/** @param {?proto.iotextypes.GenesisPoll|undefined} value */
proto.iotextypes.Genesis.prototype.setPoll = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.iotextypes.Genesis.prototype.clearPoll = function() {
  this.setPoll(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.iotextypes.Genesis.prototype.hasPoll = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GenesisRewarding rewarding = 4;
 * @return {?proto.iotextypes.GenesisRewarding}
 */
proto.iotextypes.Genesis.prototype.getRewarding = function() {
  return /** @type{?proto.iotextypes.GenesisRewarding} */ (
    jspb.Message.getWrapperField(this, proto.iotextypes.GenesisRewarding, 4));
};


/** @param {?proto.iotextypes.GenesisRewarding|undefined} value */
proto.iotextypes.Genesis.prototype.setRewarding = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.iotextypes.Genesis.prototype.clearRewarding = function() {
  this.setRewarding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.iotextypes.Genesis.prototype.hasRewarding = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.GenesisBlockchain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotextypes.GenesisBlockchain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iotextypes.GenesisBlockchain.displayName = 'proto.iotextypes.GenesisBlockchain';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.GenesisBlockchain.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.GenesisBlockchain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.GenesisBlockchain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisBlockchain.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    blockgaslimit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    actiongaslimit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    blockinterval: jspb.Message.getFieldWithDefault(msg, 4, 0),
    numsubepochs: jspb.Message.getFieldWithDefault(msg, 5, 0),
    numdelegates: jspb.Message.getFieldWithDefault(msg, 6, 0),
    numcandidatedelegates: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timebasedrotation: jspb.Message.getFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.GenesisBlockchain}
 */
proto.iotextypes.GenesisBlockchain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.GenesisBlockchain;
  return proto.iotextypes.GenesisBlockchain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.GenesisBlockchain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.GenesisBlockchain}
 */
proto.iotextypes.GenesisBlockchain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockgaslimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActiongaslimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockinterval(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumsubepochs(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumdelegates(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumcandidatedelegates(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTimebasedrotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.GenesisBlockchain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.GenesisBlockchain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.GenesisBlockchain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisBlockchain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBlockgaslimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getActiongaslimit();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getBlockinterval();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getNumsubepochs();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getNumdelegates();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getNumcandidatedelegates();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getTimebasedrotation();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.iotextypes.GenesisBlockchain.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisBlockchain.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 blockGasLimit = 2;
 * @return {number}
 */
proto.iotextypes.GenesisBlockchain.prototype.getBlockgaslimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisBlockchain.prototype.setBlockgaslimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 actionGasLimit = 3;
 * @return {number}
 */
proto.iotextypes.GenesisBlockchain.prototype.getActiongaslimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisBlockchain.prototype.setActiongaslimit = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 blockInterval = 4;
 * @return {number}
 */
proto.iotextypes.GenesisBlockchain.prototype.getBlockinterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisBlockchain.prototype.setBlockinterval = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 numSubEpochs = 5;
 * @return {number}
 */
proto.iotextypes.GenesisBlockchain.prototype.getNumsubepochs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisBlockchain.prototype.setNumsubepochs = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 numDelegates = 6;
 * @return {number}
 */
proto.iotextypes.GenesisBlockchain.prototype.getNumdelegates = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisBlockchain.prototype.setNumdelegates = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 numCandidateDelegates = 7;
 * @return {number}
 */
proto.iotextypes.GenesisBlockchain.prototype.getNumcandidatedelegates = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisBlockchain.prototype.setNumcandidatedelegates = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool timeBasedRotation = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.iotextypes.GenesisBlockchain.prototype.getTimebasedrotation = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.iotextypes.GenesisBlockchain.prototype.setTimebasedrotation = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.GenesisAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.GenesisAccount.repeatedFields_, null);
};
goog.inherits(proto.iotextypes.GenesisAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iotextypes.GenesisAccount.displayName = 'proto.iotextypes.GenesisAccount';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotextypes.GenesisAccount.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.GenesisAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.GenesisAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.GenesisAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    initbalanceaddrsList: jspb.Message.getRepeatedField(msg, 1),
    initbalancesList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.GenesisAccount}
 */
proto.iotextypes.GenesisAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.GenesisAccount;
  return proto.iotextypes.GenesisAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.GenesisAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.GenesisAccount}
 */
proto.iotextypes.GenesisAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addInitbalanceaddrs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addInitbalances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.GenesisAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.GenesisAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.GenesisAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInitbalanceaddrsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getInitbalancesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string initBalanceAddrs = 1;
 * @return {!Array<string>}
 */
proto.iotextypes.GenesisAccount.prototype.getInitbalanceaddrsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.iotextypes.GenesisAccount.prototype.setInitbalanceaddrsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.iotextypes.GenesisAccount.prototype.addInitbalanceaddrs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.iotextypes.GenesisAccount.prototype.clearInitbalanceaddrsList = function() {
  this.setInitbalanceaddrsList([]);
};


/**
 * repeated string initBalances = 2;
 * @return {!Array<string>}
 */
proto.iotextypes.GenesisAccount.prototype.getInitbalancesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.iotextypes.GenesisAccount.prototype.setInitbalancesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.iotextypes.GenesisAccount.prototype.addInitbalances = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.iotextypes.GenesisAccount.prototype.clearInitbalancesList = function() {
  this.setInitbalancesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.GenesisPoll = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.GenesisPoll.repeatedFields_, null);
};
goog.inherits(proto.iotextypes.GenesisPoll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iotextypes.GenesisPoll.displayName = 'proto.iotextypes.GenesisPoll';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotextypes.GenesisPoll.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.GenesisPoll.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.GenesisPoll.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.GenesisPoll} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisPoll.toObject = function(includeInstance, msg) {
  var f, obj = {
    enablegravitychainvoting: jspb.Message.getFieldWithDefault(msg, 1, false),
    gravitychainstartheight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    registercontractaddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    stakingcontractaddress: jspb.Message.getFieldWithDefault(msg, 4, ""),
    votethreshold: jspb.Message.getFieldWithDefault(msg, 5, ""),
    scorethreshold: jspb.Message.getFieldWithDefault(msg, 6, ""),
    selfstakingthreshold: jspb.Message.getFieldWithDefault(msg, 7, ""),
    delegatesList: jspb.Message.toObjectList(msg.getDelegatesList(),
    proto.iotextypes.GenesisDelegate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.GenesisPoll}
 */
proto.iotextypes.GenesisPoll.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.GenesisPoll;
  return proto.iotextypes.GenesisPoll.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.GenesisPoll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.GenesisPoll}
 */
proto.iotextypes.GenesisPoll.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnablegravitychainvoting(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGravitychainstartheight(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistercontractaddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStakingcontractaddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVotethreshold(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setScorethreshold(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelfstakingthreshold(value);
      break;
    case 8:
      var value = new proto.iotextypes.GenesisDelegate;
      reader.readMessage(value,proto.iotextypes.GenesisDelegate.deserializeBinaryFromReader);
      msg.addDelegates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.GenesisPoll.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.GenesisPoll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.GenesisPoll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisPoll.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnablegravitychainvoting();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getGravitychainstartheight();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRegistercontractaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStakingcontractaddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVotethreshold();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getScorethreshold();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSelfstakingthreshold();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDelegatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.iotextypes.GenesisDelegate.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool enableGravityChainVoting = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.iotextypes.GenesisPoll.prototype.getEnablegravitychainvoting = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.iotextypes.GenesisPoll.prototype.setEnablegravitychainvoting = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 gravityChainStartHeight = 2;
 * @return {number}
 */
proto.iotextypes.GenesisPoll.prototype.getGravitychainstartheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisPoll.prototype.setGravitychainstartheight = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string registerContractAddress = 3;
 * @return {string}
 */
proto.iotextypes.GenesisPoll.prototype.getRegistercontractaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisPoll.prototype.setRegistercontractaddress = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string stakingContractAddress = 4;
 * @return {string}
 */
proto.iotextypes.GenesisPoll.prototype.getStakingcontractaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisPoll.prototype.setStakingcontractaddress = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string voteThreshold = 5;
 * @return {string}
 */
proto.iotextypes.GenesisPoll.prototype.getVotethreshold = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisPoll.prototype.setVotethreshold = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string scoreThreshold = 6;
 * @return {string}
 */
proto.iotextypes.GenesisPoll.prototype.getScorethreshold = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisPoll.prototype.setScorethreshold = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string selfStakingThreshold = 7;
 * @return {string}
 */
proto.iotextypes.GenesisPoll.prototype.getSelfstakingthreshold = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisPoll.prototype.setSelfstakingthreshold = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated GenesisDelegate delegates = 8;
 * @return {!Array<!proto.iotextypes.GenesisDelegate>}
 */
proto.iotextypes.GenesisPoll.prototype.getDelegatesList = function() {
  return /** @type{!Array<!proto.iotextypes.GenesisDelegate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.GenesisDelegate, 8));
};


/** @param {!Array<!proto.iotextypes.GenesisDelegate>} value */
proto.iotextypes.GenesisPoll.prototype.setDelegatesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.iotextypes.GenesisDelegate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotextypes.GenesisDelegate}
 */
proto.iotextypes.GenesisPoll.prototype.addDelegates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.iotextypes.GenesisDelegate, opt_index);
};


proto.iotextypes.GenesisPoll.prototype.clearDelegatesList = function() {
  this.setDelegatesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.GenesisDelegate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotextypes.GenesisDelegate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iotextypes.GenesisDelegate.displayName = 'proto.iotextypes.GenesisDelegate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.GenesisDelegate.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.GenesisDelegate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.GenesisDelegate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisDelegate.toObject = function(includeInstance, msg) {
  var f, obj = {
    operatoraddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rewardaddr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    votes: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.GenesisDelegate}
 */
proto.iotextypes.GenesisDelegate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.GenesisDelegate;
  return proto.iotextypes.GenesisDelegate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.GenesisDelegate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.GenesisDelegate}
 */
proto.iotextypes.GenesisDelegate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatoraddr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardaddr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.GenesisDelegate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.GenesisDelegate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.GenesisDelegate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisDelegate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperatoraddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRewardaddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVotes();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string operatorAddr = 1;
 * @return {string}
 */
proto.iotextypes.GenesisDelegate.prototype.getOperatoraddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisDelegate.prototype.setOperatoraddr = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string rewardAddr = 2;
 * @return {string}
 */
proto.iotextypes.GenesisDelegate.prototype.getRewardaddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisDelegate.prototype.setRewardaddr = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string votes = 3;
 * @return {string}
 */
proto.iotextypes.GenesisDelegate.prototype.getVotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisDelegate.prototype.setVotes = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotextypes.GenesisRewarding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotextypes.GenesisRewarding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iotextypes.GenesisRewarding.displayName = 'proto.iotextypes.GenesisRewarding';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotextypes.GenesisRewarding.prototype.toObject = function(opt_includeInstance) {
  return proto.iotextypes.GenesisRewarding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotextypes.GenesisRewarding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisRewarding.toObject = function(includeInstance, msg) {
  var f, obj = {
    initadminaddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    initbalance: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blockreward: jspb.Message.getFieldWithDefault(msg, 3, ""),
    epochreward: jspb.Message.getFieldWithDefault(msg, 4, ""),
    numdelegatesforepochreward: jspb.Message.getFieldWithDefault(msg, 5, 0),
    foundationbonus: jspb.Message.getFieldWithDefault(msg, 6, ""),
    numdelegatesforfoundationbonus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    foundationbonuslastepoch: jspb.Message.getFieldWithDefault(msg, 8, 0),
    productivitythreshold: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotextypes.GenesisRewarding}
 */
proto.iotextypes.GenesisRewarding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotextypes.GenesisRewarding;
  return proto.iotextypes.GenesisRewarding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotextypes.GenesisRewarding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotextypes.GenesisRewarding}
 */
proto.iotextypes.GenesisRewarding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitadminaddr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitbalance(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockreward(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpochreward(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumdelegatesforepochreward(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFoundationbonus(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumdelegatesforfoundationbonus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFoundationbonuslastepoch(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProductivitythreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotextypes.GenesisRewarding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotextypes.GenesisRewarding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotextypes.GenesisRewarding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotextypes.GenesisRewarding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInitadminaddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInitbalance();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlockreward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEpochreward();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNumdelegatesforepochreward();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getFoundationbonus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNumdelegatesforfoundationbonus();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getFoundationbonuslastepoch();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getProductivitythreshold();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional string initAdminAddr = 1;
 * @return {string}
 */
proto.iotextypes.GenesisRewarding.prototype.getInitadminaddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisRewarding.prototype.setInitadminaddr = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string initBalance = 2;
 * @return {string}
 */
proto.iotextypes.GenesisRewarding.prototype.getInitbalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisRewarding.prototype.setInitbalance = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string blockReward = 3;
 * @return {string}
 */
proto.iotextypes.GenesisRewarding.prototype.getBlockreward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisRewarding.prototype.setBlockreward = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string epochReward = 4;
 * @return {string}
 */
proto.iotextypes.GenesisRewarding.prototype.getEpochreward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisRewarding.prototype.setEpochreward = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 numDelegatesForEpochReward = 5;
 * @return {number}
 */
proto.iotextypes.GenesisRewarding.prototype.getNumdelegatesforepochreward = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisRewarding.prototype.setNumdelegatesforepochreward = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string foundationBonus = 6;
 * @return {string}
 */
proto.iotextypes.GenesisRewarding.prototype.getFoundationbonus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.iotextypes.GenesisRewarding.prototype.setFoundationbonus = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 numDelegatesForFoundationBonus = 7;
 * @return {number}
 */
proto.iotextypes.GenesisRewarding.prototype.getNumdelegatesforfoundationbonus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisRewarding.prototype.setNumdelegatesforfoundationbonus = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 foundationBonusLastEpoch = 8;
 * @return {number}
 */
proto.iotextypes.GenesisRewarding.prototype.getFoundationbonuslastepoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisRewarding.prototype.setFoundationbonuslastepoch = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 productivityThreshold = 9;
 * @return {number}
 */
proto.iotextypes.GenesisRewarding.prototype.getProductivitythreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.iotextypes.GenesisRewarding.prototype.setProductivitythreshold = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


goog.object.extend(exports, proto.iotextypes);
